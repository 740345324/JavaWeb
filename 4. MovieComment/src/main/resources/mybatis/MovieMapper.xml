<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.movie.dao.MovieMapper" >
  <resultMap id="BaseResultMap" type="com.movie.bean.Movie" >
    <id column="mid" property="mid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="genres" property="genres" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="comments_count" property="commentsCount" jdbcType="INTEGER" />
    <result column="average" property="average" jdbcType="REAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.movie.bean.Movie" extends="BaseResultMap" >
    <result column="summary" property="summary" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    mid, title, genres, image, year, comments_count, average
  </sql>
  <sql id="Blob_Column_List" >
    summary
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.movie.bean.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.movie.bean.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Movie
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <select id="selectByTitle" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Movie
    where title like #{title,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Movie
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.movie.bean.MovieExample" >
    delete from Movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.movie.bean.Movie" >
    insert into Movie (mid, title, genres, 
      image, year, comments_count, 
      average, summary)
    values (#{mid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{genres,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, #{commentsCount,jdbcType=INTEGER}, 
      #{average,jdbcType=REAL}, #{summary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.movie.bean.Movie" >
    insert into Movie
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mid != null" >
        mid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="genres != null" >
        genres,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="commentsCount != null" >
        comments_count,
      </if>
      <if test="average != null" >
        average,
      </if>
      <if test="summary != null" >
        summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="genres != null" >
        #{genres,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="commentsCount != null" >
        #{commentsCount,jdbcType=INTEGER},
      </if>
      <if test="average != null" >
        #{average,jdbcType=REAL},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.movie.bean.MovieExample" resultType="java.lang.Integer" >
    select count(*) from Movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Movie
    <set >
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.genres != null" >
        genres = #{record.genres,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.commentsCount != null" >
        comments_count = #{record.commentsCount,jdbcType=INTEGER},
      </if>
      <if test="record.average != null" >
        average = #{record.average,jdbcType=REAL},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update Movie
    set mid = #{record.mid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      genres = #{record.genres,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      comments_count = #{record.commentsCount,jdbcType=INTEGER},
      average = #{record.average,jdbcType=REAL},
      summary = #{record.summary,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Movie
    set mid = #{record.mid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      genres = #{record.genres,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      comments_count = #{record.commentsCount,jdbcType=INTEGER},
      average = #{record.average,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.movie.bean.Movie" >
    update Movie
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="genres != null" >
        genres = #{genres,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="commentsCount != null" >
        comments_count = #{commentsCount,jdbcType=INTEGER},
      </if>
      <if test="average != null" >
        average = #{average,jdbcType=REAL},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.movie.bean.Movie" >
    update Movie
    set title = #{title,jdbcType=VARCHAR},
      genres = #{genres,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      comments_count = #{commentsCount,jdbcType=INTEGER},
      average = #{average,jdbcType=REAL},
      summary = #{summary,jdbcType=LONGVARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.movie.bean.Movie" >
    update Movie
    set title = #{title,jdbcType=VARCHAR},
      genres = #{genres,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      comments_count = #{commentsCount,jdbcType=INTEGER},
      average = #{average,jdbcType=REAL}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
</mapper>